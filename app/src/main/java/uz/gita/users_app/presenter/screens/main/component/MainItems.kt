package uz.gita.users_app.presenter.screens.main.componentimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.foundation.layout.widthimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.material3.Surfaceimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Modifierimport androidx.compose.ui.draw.clipimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.text.TextStyleimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport com.bumptech.glide.integration.compose.ExperimentalGlideComposeApiimport com.bumptech.glide.integration.compose.GlideImageimport com.bumptech.glide.integration.compose.placeholderimport uz.gita.users_app.R@OptIn(ExperimentalGlideComposeApi::class)@Composablefun HomeItems(    fullName: String,    gender: String,    address: String,    email: String,    picture: String,    onClick: () -> Unit = {}) {    Surface(        modifier = Modifier.fillMaxSize(),        shadowElevation = 4.dp,    ) {        Row(            modifier = Modifier                .fillMaxSize()                .padding(16.dp)                .clickable { onClick() }        ) {            GlideImage(                model = picture,                contentDescription = "",                modifier = Modifier                    .size(120.dp)                    .clip(shape = RoundedCornerShape(8.dp)),                loading = placeholder(R.drawable.ic_launcher_background),            )            Spacer(modifier = Modifier.width(16.dp))            Column {                Text(                    text = fullName,                    style = TextStyle(                        fontSize = 20.sp,                        fontWeight = FontWeight.Bold,                    ),                )                Spacer(modifier = Modifier.height(4.dp))                Text(                    text = gender,                    style = TextStyle(                        fontSize = 16.sp,                        color = Color.Gray,                    ),                )                Spacer(modifier = Modifier.height(4.dp))                Text(                    text = address,                    style = TextStyle(                        fontSize = 16.sp,                        color = Color.Gray,                    ),                )                Spacer(modifier = Modifier.height(4.dp))                Text(                    text = email,                    style = TextStyle(                        fontSize = 16.sp,                        color = Color.Gray,                    ),                )            }        }    }}@Composable@Preview(showBackground = true)fun HomeItemsPreview() {    HomeItems(        fullName = "Azizbek Otaboyev",        gender = "male",        address = "Uzbekistan, Tashkent",        email = "otaboevlive@gmail.com",        picture = "null"    )}