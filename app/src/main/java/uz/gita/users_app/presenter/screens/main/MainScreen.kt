package uz.gita.users_app.presenter.screens.mainimport android.annotation.SuppressLintimport androidx.compose.foundation.layout.fillMaxHeightimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.foundation.lazy.itemsimport androidx.compose.material3.Surfaceimport androidx.compose.runtime.Composableimport androidx.compose.runtime.Stateimport androidx.compose.runtime.collectAsStateimport androidx.compose.runtime.mutableStateOfimport androidx.compose.ui.Modifierimport androidx.compose.ui.tooling.preview.Previewimport cafe.adriel.voyager.androidx.AndroidScreenimport cafe.adriel.voyager.hilt.getViewModelimport uz.gita.users_app.presenter.screens.main.component.HomeItemsimport uz.gita.users_app.ui.theme.WeatherAppThemeclass MainScreen : AndroidScreen() {    @Composable    override fun Content() {        val viewModel: MainContract.ViewModel = getViewModel<MainViewModel>()        WeatherAppTheme {            HomeScreenContent(                uiState = viewModel.uiState.collectAsState(),                onEventDispatcher = viewModel::onEventDispatcher            )        }    }    @Composable    fun HomeScreenContent(        uiState: State<MainContract.UIState>,        onEventDispatcher: (MainContract.Intent) -> Unit = {},    ) {        Surface(            modifier = Modifier                .fillMaxHeight()                .fillMaxWidth()        ) {            LazyColumn() {                items(uiState.value.userList) {                    HomeItems(                        fullName = it.fullName,                        gender = it.gender,                        address = it.country,                        email = it.email,                        picture = it.picture,                        onClick = {                            onEventDispatcher.invoke(                                MainContract.Intent.MoveToDetail(it)                            )                        }                    )                }            }        }    }    @SuppressLint("UnrememberedMutableState")    @Composable    @Preview(showBackground = true)    fun HomeScreenPreview() {        HomeScreenContent(uiState = mutableStateOf(MainContract.UIState()))    }}