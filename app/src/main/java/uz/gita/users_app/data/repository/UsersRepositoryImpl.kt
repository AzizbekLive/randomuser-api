package uz.gita.users_app.data.repositoryimport android.util.Logimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.catchimport kotlinx.coroutines.flow.flowimport kotlinx.coroutines.flow.flowOnimport uz.gita.users_app.data.mapper.toModelimport uz.gita.users_app.data.model.UsersModelimport uz.gita.users_app.data.source.remote.api.UsersApiimport uz.gita.users_app.domain.repository.UsersRepositoryimport javax.inject.Injectclass UsersRepositoryImpl @Inject constructor(    private val api: UsersApi,) : UsersRepository {    override fun getAllUser(): Flow<List<UsersModel>> = flow {        Log.d("TTT", "getAllUser: 1")        val response = api.getAllUsers()        if (response.isSuccessful && response.body() != null) {            response.body()?.let {                emit(response.body()!!.results.map {                    it.toModel()                })            }        }    }        .catch { }        .flowOn(Dispatchers.IO)}